Prerequisites
=====
+ [GSL](https://www.gnu.org/software/gsl/) is needed for matrix algebra, integration and interpolation.
+ [Python](https://www.python.org), [Numpy](http://www.numpy.org) and [Scipy](http://www.numpy.org) are needed for fitting.
+ [OpenMP](https://www.openmp.org) is needed to enable parallel computing for shared memory.

Overview of Programs
=====
+ **LyaPowerEstimate** iterates over multiple qso spectra and estimates one-dimensional Lya power spectrum in the line-of-sight. It maximizes likelihood using Newton-Raphson method.
+ **CreateSQLookUpTable** creates look up tables for signal and derivative matrices used in LyaPowerEstimate.

Both programs take one common config file.

Makefile
=====
To choose between linear and cubic interpolation for one dimension, uncomment on of the following:
    
    # OPT += -DINTERP_1D_TYPE=GSL_CUBIC_INTERPOLATION
    # OPT += -DINTERP_1D_TYPE=GSL_LINEAR_INTERPOLATION

To choose between bilinear and bicubic interpolation for two dimensions, uncomment on of the following:

    # OPT += -DINTERP_2D_TYPE=GSL_BILINEAR_INTERPOLATION
    # OPT += -DINTERP_2D_TYPE=GSL_BICUBIC_INTERPOLATION

There are two implemented fiducial power spectra defined in [core/fiducial_cosmology.cpp](core/fiducial_cosmology.cpp). To use a simple debugging power spectrum, uncomment 

    # OPT += -DDEBUG_FIT_FUNCTION
To use the fitting function defined in [Palanque-Delabrouille, et al., 2013](http://adsabs.harvard.edu/cgi-bin/bib_query?arXiv:1306.5896), uncomment 
    
    # OPT += -DPD13_FIT_FUNCTION

Redshift bins can be top-hats or interpolations. Uncomment the corresponding binning scheme needed.

    # OPT += -DTOPHAT_Z_BINNING_FN
    # OPT += -DTRIANGLE_Z_BINNING_FN

Choose a system type to compile. 

    SYSTYPE="LAPTOP"

Create custom system types by modifying one of the present cases. For example for MacBook Pro, you need to pass OpenMP libraries to `clang++`.
    
    ifeq ($(SYSTYPE),"LAPTOP") 
    CXX := clang++
    GSL_INCL = -I/usr/local/include
    GSL_LIBS = -lgsl -lgslcblas -L/usr/local/lib
    OMP_FLAG = -Xpreprocessor -fopenmp
    OMP_INCL = -I/usr/local/opt/libomp/include
    OMP_LIBS = -lomp -L/usr/local/opt/libomp/lib
    endif

Config File
=====
Config file has one file list for qso spectra. This txt file should start with number of qso and then have relative file paths.

Bin edges for k start with linear spacing: `K0 + LinearKBinWidth * n`, where `n=[0, NumberOfLinearBins]`. Then continues with log spacing: `K_Edges[NumberOfLinearBins] * 10^(Log10KBinWidth * n)`. Parameters for k binning are:

    K0 0.

    NumberOfLinearBins    5
    NumberOfLog10Bins     13

    LinearKBinWidth       2E-4
    Log10KBinWidth        0.1

Redshift bins are linearly spaced.

    FirstRedshiftBinCenter    1.9
    RedshiftBinWidth          0.2
    NumberOfRedshiftBins      6

Fiducial Palanque fit function parameters when used.
    
    FiducialAmplitude            0.06
    FiducialSlope               -2.6
    FiducialCurvature           -0.1
    FiducialRedshiftPower        0
    FiducialRedshiftCurvature    0
    FiducialLorentzianLambda     0
    
Lookup tables are generated with the following parameters:

    NumberVPoints     200
    NumberZPoints     200
    PixelWidth        4.0
    VelocityLength    1000.

Turn off fiducial signal matrix by setting this to a positive integer integer.
    
    TurnOffBaseline   0

The maximum number of iterations are

    NumberOfIterations    10

The location of the file list, and the directory where those files live:

    FileNameList      ./data/qso_dir/qso_list.txt
    FileInputDir      ./data/qso_dir/

The directory for output files and file name base:

    OutputDir         ./data/qso_results/
    OutputFileBase    lya

List of spectograph resolutions (R) is in `FileNameRList`. This file starts with number of Rs.

    FileNameRList     ./data/qso_dir/specres_list.txt

These lookup tables are saved with the follwoing file name bases to `FileInputDir`:

    SignalLookUpTableBase          signal_lookup
    DerivativeSLookUpTableBase     derivative_lookup

Quasar Spectrum File
====
Quasar spectrum file is in binary format. It starts with a header (see [QSOFile](io/qso_file.hpp)), then has wavelength, flux and noise in double arrays.
